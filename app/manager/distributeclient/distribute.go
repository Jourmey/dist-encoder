// Code generated by goctl. DO NOT EDIT.
// Source: distribute.proto

package distributeclient

import (
	"context"

	"dist-encoder/pb/distribute"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddConvertCnfRequest      = distribute.AddConvertCnfRequest
	AddConvertCnfResponse     = distribute.AddConvertCnfResponse
	AddVideoJobRequest        = distribute.AddVideoJobRequest
	AddVideoJobResponse       = distribute.AddVideoJobResponse
	ConvertCnf                = distribute.ConvertCnf
	GetVideoJobRequest        = distribute.GetVideoJobRequest
	GetVideoJobResponse       = distribute.GetVideoJobResponse
	KwArgs                    = distribute.KwArgs
	ListConvertCnfRequest     = distribute.ListConvertCnfRequest
	ListConvertCnfResponse    = distribute.ListConvertCnfResponse
	Page                      = distribute.Page
	QueryVideoJobRequest      = distribute.QueryVideoJobRequest
	QueryVideoJobResponse     = distribute.QueryVideoJobResponse
	SetVideoJobResultRequest  = distribute.SetVideoJobResultRequest
	SetVideoJobResultResponse = distribute.SetVideoJobResultResponse
	VideoJob                  = distribute.VideoJob

	Distribute interface {
		// 工作机器获取工作任务
		GetVideoJob(ctx context.Context, in *GetVideoJobRequest, opts ...grpc.CallOption) (*GetVideoJobResponse, error)
		// 工作机器上报工作状态
		SetVideoJobResult(ctx context.Context, in *SetVideoJobResultRequest, opts ...grpc.CallOption) (*SetVideoJobResultResponse, error)
		// QueryVideoJob 查询转码任务
		QueryVideoJob(ctx context.Context, in *QueryVideoJobRequest, opts ...grpc.CallOption) (*QueryVideoJobResponse, error)
		// AddVideoJob 添加视频转码任务
		AddVideoJob(ctx context.Context, in *AddVideoJobRequest, opts ...grpc.CallOption) (*AddVideoJobResponse, error)
		// ListConvertCnf 查询转码任务
		ListConvertCnf(ctx context.Context, in *ListConvertCnfRequest, opts ...grpc.CallOption) (*ListConvertCnfResponse, error)
		// AddConvertCnf 添加视频转码任务
		AddConvertCnf(ctx context.Context, in *AddConvertCnfRequest, opts ...grpc.CallOption) (*AddConvertCnfResponse, error)
	}

	defaultDistribute struct {
		cli zrpc.Client
	}
)

func NewDistribute(cli zrpc.Client) Distribute {
	return &defaultDistribute{
		cli: cli,
	}
}

// 工作机器获取工作任务
func (m *defaultDistribute) GetVideoJob(ctx context.Context, in *GetVideoJobRequest, opts ...grpc.CallOption) (*GetVideoJobResponse, error) {
	client := distribute.NewDistributeClient(m.cli.Conn())
	return client.GetVideoJob(ctx, in, opts...)
}

// 工作机器上报工作状态
func (m *defaultDistribute) SetVideoJobResult(ctx context.Context, in *SetVideoJobResultRequest, opts ...grpc.CallOption) (*SetVideoJobResultResponse, error) {
	client := distribute.NewDistributeClient(m.cli.Conn())
	return client.SetVideoJobResult(ctx, in, opts...)
}

// QueryVideoJob 查询转码任务
func (m *defaultDistribute) QueryVideoJob(ctx context.Context, in *QueryVideoJobRequest, opts ...grpc.CallOption) (*QueryVideoJobResponse, error) {
	client := distribute.NewDistributeClient(m.cli.Conn())
	return client.QueryVideoJob(ctx, in, opts...)
}

// AddVideoJob 添加视频转码任务
func (m *defaultDistribute) AddVideoJob(ctx context.Context, in *AddVideoJobRequest, opts ...grpc.CallOption) (*AddVideoJobResponse, error) {
	client := distribute.NewDistributeClient(m.cli.Conn())
	return client.AddVideoJob(ctx, in, opts...)
}

// ListConvertCnf 查询转码任务
func (m *defaultDistribute) ListConvertCnf(ctx context.Context, in *ListConvertCnfRequest, opts ...grpc.CallOption) (*ListConvertCnfResponse, error) {
	client := distribute.NewDistributeClient(m.cli.Conn())
	return client.ListConvertCnf(ctx, in, opts...)
}

// AddConvertCnf 添加视频转码任务
func (m *defaultDistribute) AddConvertCnf(ctx context.Context, in *AddConvertCnfRequest, opts ...grpc.CallOption) (*AddConvertCnfResponse, error) {
	client := distribute.NewDistributeClient(m.cli.Conn())
	return client.AddConvertCnf(ctx, in, opts...)
}
