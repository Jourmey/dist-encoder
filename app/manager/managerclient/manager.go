// Code generated by goctl. DO NOT EDIT.
// Source: manager.proto

package managerclient

import (
	"context"

	"dist-encoder/pb/manager"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	KwArgs   = manager.KwArgs
	PutInfo  = manager.PutInfo
	VideoJob = manager.VideoJob
	Worker   = manager.Worker

	Manager interface {
		GetVideoJob(ctx context.Context, in *Worker, opts ...grpc.CallOption) (*VideoJob, error)
	}

	defaultManager struct {
		cli zrpc.Client
	}
)

func NewManager(cli zrpc.Client) Manager {
	return &defaultManager{
		cli: cli,
	}
}

func (m *defaultManager) GetVideoJob(ctx context.Context, in *Worker, opts ...grpc.CallOption) (*VideoJob, error) {
	client := manager.NewManagerClient(m.cli.Conn())
	return client.GetVideoJob(ctx, in, opts...)
}
